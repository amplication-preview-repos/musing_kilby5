/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { RatingCreateNestedManyWithoutMoviesInput } from "./RatingCreateNestedManyWithoutMoviesInput";
import { CommentCreateNestedManyWithoutMoviesInput } from "./CommentCreateNestedManyWithoutMoviesInput";

@InputType()
class MovieCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  releaseDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => RatingCreateNestedManyWithoutMoviesInput,
  })
  @ValidateNested()
  @Type(() => RatingCreateNestedManyWithoutMoviesInput)
  @IsOptional()
  @Field(() => RatingCreateNestedManyWithoutMoviesInput, {
    nullable: true,
  })
  ratings?: RatingCreateNestedManyWithoutMoviesInput;

  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutMoviesInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutMoviesInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutMoviesInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutMoviesInput;
}

export { MovieCreateInput as MovieCreateInput };
